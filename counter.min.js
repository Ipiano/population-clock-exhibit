function Counter(b, a) {
  this.initial = b;
  this.rate_per_millisecond = a;
  this.current = b;
  this.previous = b;
  this.start = new Date().getTime();
}
Counter.prototype = {
  update: function () {
    var a = new Date().getTime();
    this.previous = this.current;
    this.current = this.initial + (a - this.start) * this.rate_per_millisecond;
  },
  difference: function () {
    return this.current - this.previous;
  },
  changed: function () {
    return Math.floor(this.current) != Math.floor(this.previous);
  },
};
Counter.milliseconds_per_unit = function (d) {
  var c = 1,
    b = 1000 * c,
    e = 60 * b,
    a = 60 * e;
  if (d.toLowerCase().indexOf("hour") !== -1) {
    return a;
  } else {
    if (d.toLowerCase().indexOf("minute") !== -1) {
      return e;
    } else {
      if (d.toLowerCase().indexOf("millisecond") !== -1) {
        return c;
      } else {
        return b;
      }
    }
  }
};
Counter.rate_per_millisecond = function (a, b, c) {
  return a / b / c;
};
